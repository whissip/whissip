<?php
/**
 * This file implements the system diagnostics support functions.
 *
 * b2evolution - {@link http://b2evolution.net/}
 * Released under GNU GPL License - {@link http://b2evolution.net/about/license.html}
 *
 * @copyright (c)2003-2010 by Francois PLANQUE - {@link http://fplanque.net/}
 *
 * {@internal Open Source relicensing agreement:
 * }}
 *
 * @package admin
 *
 * {@internal Below is a list of authors who have contributed to design/coding of this file: }}
 * @author fplanque: Francois PLANQUE.
 *
 * @version $Id$
 */


/**
 * Check if a directory is ready for operation, i-e writable by PHP.
 *
 * @return array {status,msg}
 */
function system_check_dir( $directory = 'media' )
{
	global $media_path, $cache_path;

	switch( $directory )
	{
		case 'cache':
			$path = $cache_path;
			break;

		case 'media':
			$path = $media_path;
			break;

		default:
			return array( 'error', 'Unknown directory' );
	}

	if( ! is_dir( $path ) )
	{
		$msg = T_( 'The directory doesn\'t exist.' );
		$status = 'error';
	}
	elseif( ! is_readable( $path ) )
	{
		$msg = T_( 'The directory is not readable.' );
		$status = 'error';
	}
	elseif( ! is_writable( $path ) )
	{
		$msg = T_( 'The directory is not writable.' );
		$satus = 'error';
	}
	else
	{
		$msg = T_( 'Ok' );
		$status = 'ok';
	}

	return array( $status, $msg );
}


/**
 * Check if install directory has been removed
 *
 * @return array {status,msg}
 */
function system_check_install_removed()
{
	global $install_path;

	if( ! is_dir($install_path) || ! file_exists($install_path.'index.php') )
	{
		$msg = T_('Deleted');
		$status = 'ok';
	}
	elseif( ! is_readable($install_path) || ! is_readable($install_path.'index.php') )
	{
		$msg = T_('Protected');
		$exists = 'ok';
	}
	else
	{
		$msg = T_('Not deleted').' - '.$install_path;
		$status = 'error';
	}

	return array( $status, $msg );
}


/**
 * @return boolean true if DB supports UTF8
 */
function system_check_db_utf8()
{
	global $DB;

	$save_show_errors = $DB->show_errors;
	$save_halt_on_error = $DB->halt_on_error;
	$last_error = $DB->last_error;
	$error = $DB->error;
	// Blatantly ignore any error generated by SET NAMES...
	$DB->show_errors = false;
	$DB->halt_on_error = false;
	if( $DB->query( 'SET NAMES utf8' ) === false )
	{
		$ok = false;
	}
	else
	{
		$ok = true;
	}
	$DB->show_errors = $save_show_errors;
	$DB->halt_on_error = $save_halt_on_error;
	$DB->last_error = $last_error;
	$DB->error = $error;

	return $ok;
}


/**
 * @return array {id,name,name+id}
 */
function system_check_process_user()
{
	$process_uid = NULL;
	$process_user = NULL;
	if( function_exists('posix_geteuid') )
	{
		$process_uid = posix_geteuid();

		if( function_exists('posix_getpwuid')
			&& ($process_user = posix_getpwuid($process_uid)) )
		{
			$process_user = $process_user['name'];
		}

		$running_as = sprintf( '%s (uid %s)',
			($process_user ? $process_user : '?'), (!is_null($process_uid) ? $process_uid : '?') );
	}
	else
	{
		$running_as = '('.T_('Unknown').')';
	}

	return array( $process_uid, $process_user, $running_as );
}



/**
 * @return array {id,name,name+id}
 */
function system_check_process_group()
{
	$process_gid = null;
	$process_group = null;
	if( function_exists('posix_getegid') )
	{
		$process_gid = posix_getegid();

		if( function_exists('posix_getgrgid')
			&& ($process_group = posix_getgrgid($process_gid)) )
		{
			$process_group = $process_group['name'];
		}

		$running_as = sprintf( '%s (gid %s)',
			($process_group ? $process_group : '?'), (!is_null($process_gid) ? $process_gid : '?') );
	}
	else
	{
		$running_as = '('.T_('Unknown').')';
	}

	return array( $process_gid, $process_group, $running_as );
}


/**
 * @return integer
 */
function system_check_upload_max_filesize()
{
	$upload_max_filesize = ini_get('upload_max_filesize');
	if( strpos( $upload_max_filesize, 'M' ) )
	{
		$upload_max_filesize = intval($upload_max_filesize) * 1024;
	}

	return $upload_max_filesize;
}

/**
 * @return integer
 */
function system_check_post_max_size()
{
	$post_max_size = ini_get('post_max_size');
	if( strpos( $post_max_size, 'M' ) )
	{
		$post_max_size = intval($post_max_size) * 1024;
	}
	return $post_max_size;
}

/**
 * @return integer
 */
function system_check_memory_limit()
{
	$memory_limit = ini_get('memory_limit');

	if( strpos( $memory_limit, 'M' ) )
	{
		$memory_limit = intval($memory_limit) * 1024;
	}
	return $memory_limit;
}


/**
 * @return string
 */
function system_check_gd_version()
{
	if( ! function_exists( 'gd_info' ) )
	{
		return NULL;
	}

	$gd_info = gd_info();
	$gd_version = $gd_info['GD Version'];

	return $gd_version;
}

/*
 * $Log$
 * Revision 1.8  2011/01/03 03:02:54  sam2kb
 * Check if /cache directory is writable. Check if /install directory and index.php are readable.
 *
 * Revision 1.7  2010/02/08 17:54:47  efy-yury
 * copyright 2009 -> 2010
 *
 * Revision 1.6  2009/05/15 19:11:37  fplanque
 * attempt to not kill the '?'
 *
 * Revision 1.5  2009/04/13 14:50:22  tblue246
 * Typo, bugfix
 *
 * Revision 1.4  2009/04/12 20:15:38  tblue246
 * Make more strings available for translation
 *
 * Revision 1.3  2009/04/11 15:33:56  tblue246
 * Typo + Fixed possible bug when UID == 0 (also, posix_geteuid() does not return a special value on error).
 *
 * Revision 1.2  2009/03/08 23:57:46  fplanque
 * 2009
 *
 * Revision 1.1  2008/04/24 22:05:59  fplanque
 * factorized system checks
 *
 */
?>
